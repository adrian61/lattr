State 25 conflicts: 2 shift/reduce
State 31 conflicts: 2 shift/reduce
State 32 conflicts: 2 shift/reduce


Grammar

    0 $accept: start $end

    1 start: prog

    2 prog: decl ';' prog
    3     | decl ';'
    4     | opt_s

    5 decl: ID list

    6 list: ',' ID list
    7     | ':' type

    8 type: T_INTEGER
    9     | T_REAL

   10 opt_s: s
   11      | opt_s ';' s

   12 s: ID T_ASSIGN e

   13 e: e '+' e
   14  | e '*' e
   15  | '-' e
   16  | '(' e ')'
   17  | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16
    ')' (41) 16
    '*' (42) 14
    '+' (43) 13
    ',' (44) 6
    '-' (45) 15
    ':' (58) 7
    ';' (59) 2 3 11
    error (256)
    T_INTEGER (258) 8
    T_REAL (259) 9
    ID (260) 5 6 12 17
    T_ASSIGN (261) 12


Nonterminals, with rules where they appear

    $accept (15)
        on left: 0
    start (16)
        on left: 1
        on right: 0
    prog (17)
        on left: 2 3 4
        on right: 1 2
    decl (18)
        on left: 5
        on right: 2 3
    list (19)
        on left: 6 7
        on right: 5 6
    type (20)
        on left: 8 9
        on right: 7
    opt_s (21)
        on left: 10 11
        on right: 4 11
    s (22)
        on left: 12
        on right: 10 11
    e (23)
        on left: 13 14 15 16 17
        on right: 12 13 14 15 16


State 0

    0 $accept: . start $end

    ID  shift, and go to state 1

    start  go to state 2
    prog   go to state 3
    decl   go to state 4
    opt_s  go to state 5
    s      go to state 6


State 1

    5 decl: ID . list
   12 s: ID . T_ASSIGN e

    T_ASSIGN  shift, and go to state 7
    ','       shift, and go to state 8
    ':'       shift, and go to state 9

    list  go to state 10


State 2

    0 $accept: start . $end

    $end  shift, and go to state 11


State 3

    1 start: prog .

    $default  reduce using rule 1 (start)


State 4

    2 prog: decl . ';' prog
    3     | decl . ';'

    ';'  shift, and go to state 12


State 5

    4 prog: opt_s .
   11 opt_s: opt_s . ';' s

    ';'  shift, and go to state 13

    $default  reduce using rule 4 (prog)


State 6

   10 opt_s: s .

    $default  reduce using rule 10 (opt_s)


State 7

   12 s: ID T_ASSIGN . e

    ID   shift, and go to state 14
    '-'  shift, and go to state 15
    '('  shift, and go to state 16

    e  go to state 17


State 8

    6 list: ',' . ID list

    ID  shift, and go to state 18


State 9

    7 list: ':' . type

    T_INTEGER  shift, and go to state 19
    T_REAL     shift, and go to state 20

    type  go to state 21


State 10

    5 decl: ID list .

    $default  reduce using rule 5 (decl)


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 prog: decl ';' . prog
    3     | decl ';' .

    ID  shift, and go to state 1

    $default  reduce using rule 3 (prog)

    prog   go to state 22
    decl   go to state 4
    opt_s  go to state 5
    s      go to state 6


State 13

   11 opt_s: opt_s ';' . s

    ID  shift, and go to state 23

    s  go to state 24


State 14

   17 e: ID .

    $default  reduce using rule 17 (e)


State 15

   15 e: '-' . e

    ID   shift, and go to state 14
    '-'  shift, and go to state 15
    '('  shift, and go to state 16

    e  go to state 25


State 16

   16 e: '(' . e ')'

    ID   shift, and go to state 14
    '-'  shift, and go to state 15
    '('  shift, and go to state 16

    e  go to state 26


State 17

   12 s: ID T_ASSIGN e .
   13 e: e . '+' e
   14  | e . '*' e

    '+'  shift, and go to state 27
    '*'  shift, and go to state 28

    $default  reduce using rule 12 (s)


State 18

    6 list: ',' ID . list

    ','  shift, and go to state 8
    ':'  shift, and go to state 9

    list  go to state 29


State 19

    8 type: T_INTEGER .

    $default  reduce using rule 8 (type)


State 20

    9 type: T_REAL .

    $default  reduce using rule 9 (type)


State 21

    7 list: ':' type .

    $default  reduce using rule 7 (list)


State 22

    2 prog: decl ';' prog .

    $default  reduce using rule 2 (prog)


State 23

   12 s: ID . T_ASSIGN e

    T_ASSIGN  shift, and go to state 7


State 24

   11 opt_s: opt_s ';' s .

    $default  reduce using rule 11 (opt_s)


State 25

   13 e: e . '+' e
   14  | e . '*' e
   15  | '-' e .

    '+'  shift, and go to state 27
    '*'  shift, and go to state 28

    '+'       [reduce using rule 15 (e)]
    '*'       [reduce using rule 15 (e)]
    $default  reduce using rule 15 (e)


State 26

   13 e: e . '+' e
   14  | e . '*' e
   16  | '(' e . ')'

    '+'  shift, and go to state 27
    '*'  shift, and go to state 28
    ')'  shift, and go to state 30


State 27

   13 e: e '+' . e

    ID   shift, and go to state 14
    '-'  shift, and go to state 15
    '('  shift, and go to state 16

    e  go to state 31


State 28

   14 e: e '*' . e

    ID   shift, and go to state 14
    '-'  shift, and go to state 15
    '('  shift, and go to state 16

    e  go to state 32


State 29

    6 list: ',' ID list .

    $default  reduce using rule 6 (list)


State 30

   16 e: '(' e ')' .

    $default  reduce using rule 16 (e)


State 31

   13 e: e . '+' e
   13  | e '+' e .
   14  | e . '*' e

    '+'  shift, and go to state 27
    '*'  shift, and go to state 28

    '+'       [reduce using rule 13 (e)]
    '*'       [reduce using rule 13 (e)]
    $default  reduce using rule 13 (e)


State 32

   13 e: e . '+' e
   14  | e . '*' e
   14  | e '*' e .

    '+'  shift, and go to state 27
    '*'  shift, and go to state 28

    '+'       [reduce using rule 14 (e)]
    '*'       [reduce using rule 14 (e)]
    $default  reduce using rule 14 (e)
